# 第三章：规则怪谈——不遵守规则拿不到好结果

前两章讲了信息框架和模块化拆解，本章要总结一些**操作中的核心规则**，帮助你用AI更高效地完成论文撰写、代码生成或实验分析。

这些规则来源于实践经验和模型行为规律，不遵守它们，输出质量很可能惨不忍睹。

---

## 规则一：明确具体

人类尚且不会读心术，你怎么能要求AI凭空猜中你的心意呢？  
- **问题常见原因**：要求不清晰，AI输出“泛泛而谈”或出现与预期不符的内容。  
- **解决方法**：
  1. 明确角色身份：科研助手、算法专家、论文写作专家等  
  2. 精确描述任务：比如“撰写区块链交易溯源实验结果分析，约300字”  
  3. 提供必要细节：实验数据、公式、参考范文、代码片段  

> 越具体，AI就越能按你的要求生成高质量内容。

---

## 规则二：精简信息，突出重点

信息太多会分散AI注意力，降低生成质量。  
- **问题常见原因**：一次性塞入过多无关数据，AI反而忽略重点。  
- **解决方法**：
  1. 对背景信息进行提炼和总结，只保留与当前任务直接相关的内容  
  2. 用章节或列表方式组织信息，保持逻辑清晰  
  3. 避免一次性输入大量原文或完整实验记录  

> 核心思想：给AI的每条信息都要有用，别让它在不重要的内容里迷路。只留下“关键内容”，AI才能集中精力做好每一步。

---

## 规则三：分步执行，化整为零

复杂任务一次完成容易出错，分步处理更可靠。  
- **问题常见原因**：AI处理长篇任务时可能出现遗漏、顺序错乱或逻辑不连贯  
- **解决方法**：
  1. 将宏大任务拆解为小子任务，例如：
     - 第一步：总结每个实验章节的数据  
     - 第二步：提取实验结论  
     - 第三步：整合为完整分析段落  
  2. 每步完成后再检查、修正，再进行下一步  
  3. 可重复使用同一个信息框架，确保输出风格和逻辑一致  

> AI毕竟本质还是一段程序，那么和程序对话就要采用程序的思维。想想当初刚开始学C语言的时候，是不是也是一条语句一条语句开始？每一步都独立、清晰、可控，这样才能逐步构建出完整功能。用同样的思路对待AI，就不会迷失在复杂任务里。

---

## 实例演示：实验分析任务拆解

假设任务是“撰写比特币节点行为分析”，可以拆解如下：

1. **提取数据摘要**：AI先生成节点交互概览（发送、查询、交易）  
2. **分析模式**：AI根据数据提取节点差异和规律  
3. **形成初稿**：整合分析，生成段落并加入必要公式  
4. **校对和优化**：检查逻辑、格式、学术风格，必要时要求AI重写或调整  

> 这样，AI不会一次性处理大量信息，而是按照你提供的模块化流程逐步生成，高效又稳定。

---

## 小结

- **规则一：明确具体**——告诉AI它是谁，要做什么，使用哪些信息  
- **规则二：精简核心**——只提供真正重要的信息，避免让AI迷路  
- **规则三：分步执行**——复杂任务拆解成多个小任务，逐步完成，每步都清晰可控  

遵守这些规则，你的AI协作效率会大幅提升，输出更可靠、更专业，也更符合科研写作和代码生成的实际需求。
